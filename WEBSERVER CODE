#include <Wire.h>
#include <WiFi.h>
#include "ESPAsyncWebServer.h"
#include <esp_now.h>
#include <SPIFFS.h>
// Replace with your network credentials
const char* ssid = "Abhishek";
const char* password = "Anvi-2021";
int chestu = 0;
int shoulder = 0;
int chestl = 0;


float temperature_Celsius;
float temperature_Fahrenheit;
float Humidity;

AsyncWebServer server(80);
AsyncEventSource events("/events");
unsigned long lastTime = 0;
unsigned long timerDelay = 100;  // send readings timer
//Structure example to receive data
//Must match the sender structure
typedef struct test_struct {
  int id;
    int x;
    int y; 
    int z;
    
    int readingId;

} test_struct;

//Create a struct_message called myData
test_struct myData;

//callback function that will be executed when data is received
void OnDataRecv(const uint8_t * mac, const uint8_t *incomingData, int len) {
  memcpy(&myData, incomingData, sizeof(myData));
  if (myData.x < 70)
  { chestu++;
    
  }
if(myData.y < 70)
  { chestl++;
    
  }
 if (myData.z < 70)
  { shoulder++;
    
  }
}

void getDHTReadings() {

  Humidity = chestu;
  // Read temperature as Celsius (the default)
  temperature_Celsius = chestl;
  // Read temperature as Fahrenheit (isFahrenheit = true)
  temperature_Fahrenheit = shoulder;
}

String processor(const String& var) {
  getDHTReadings();
  //Serial.println(var);
  if (var == "TEMPERATURE_C") {
    return String(temperature_Celsius);
  }
  else if (var == "TEMPERATURE_F") {
    return String(temperature_Fahrenheit);
  }
  else if (var == "HUMIDITY") {
    return String(Humidity);
  }
}

const char index_html[] PROGMEM = R"rawliteral(
<!DOCTYPE html>
<html style="font-size: 16px;" lang="en">
<head>
  <title>Home 1</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta charset="utf-8">
  <meta name="keywords" content="about studio">
  <meta name="description" content="">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Raleway">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">

  <link rel="stylesheet" href="/nicepage.css?version=21e9c9e9-c454-4c87-8959-fe4fce832d42" media="screen">
  <script class="u-script" type="text/javascript" src="//capp.nicepage.com/assets/jquery-1.9.1.min.js"
    defer=""></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
  <script class="u-script" type="text/javascript"
    src="//capp.nicepage.com/cabd552a8e78307aed2122f1d061efad7e2f86d6/nicepage.js" defer=""></script>
  <meta name="generator" content="Nicepage 4.14.7, nicepage.com">
  <link id="u-theme-google-font" rel="stylesheet"
    href="https://fonts.googleapis.com/css?family=Montserrat:100,100i,200,200i,300,300i,400,400i,500,500i,600,600i,700,700i,800,800i,900,900i|Open+Sans:300,300i,400,400i,500,500i,600,600i,700,700i,800,800i">
  <link id="u-page-google-font" rel="stylesheet"
    href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:200,200i,300,300i,400,400i,600,600i,700,700i,900,900i">
  <style class="u-style">
    .u-section-2 {
      background-image: url("//capp.nicepage.com/cabd552a8e78307aed2122f1d061efad7e2f86d6/images/default-image.jpg");
      min-height: 1191px;
    }

    .left {
      display: inline-block;
      border: 2px solid round;
      position: absolute;
      left: 854px;
      top: 220px;
    }

    .u-section-2 .u-shape-1 {
      height: 503px;
      margin-top: -7px;
      margin-bottom: 0;
    }

    .u-section-2 .u-list-1 {
      grid-auto-rows: 100%;
      width: 404px;
      margin: -259px auto 0 calc(((100% - 1140px) / 2));
    }

    #customers {
      font-family: Arial, Helvetica, sans-serif;
      border-collapse: collapse;
      width: 100%;
    }

    #customers td,
    #customers th {
      border: 1px solid #ddd;
      padding: 8px;
    }

    #customers tr:nth-child(even) {
      background-color: #f2f2f2;
    }

    #customers tr:hover {
      background-color: #ddd;
    }

    .u-section-2 .u-repeater-1 {
      grid-template-columns: repeat(1, 100%);
      min-height: 571px;
      grid-gap: 20px;
    }

    .u-section-2 .u-list-item-1 {
      background-image: linear-gradient(#2e10dd, #e142dc);
    }

    .u-section-2 .u-container-layout-1 {
      padding: 40px 30px;
    }

    .u-section-2 .u-text-1 {
      font-weight: 700;
      text-transform: uppercase;
      font-size: 1.25rem;
      margin: 0 40px 0 0;
    }

    .u-section-2 .u-text-2 {
      margin: 20px 0 0;
    }

    .u-section-2 .u-list-item-2 {
      background-image: linear-gradient(#2e10dd, #e142dc);
    }

    .u-section-2 .u-container-layout-2 {
      padding: 40px 30px;
    }

    .u-section-2 .u-text-3 {
      font-weight: 700;
      text-transform: uppercase;
      font-size: 1.25rem;
      margin: 0 40px 0 0;
    }

    .u-section-2 .u-text-4 {
      margin: 20px 0 0;
    }

    .u-section-2 .u-list-item-3 {
      background-image: linear-gradient(#2e10dd, #e142dc);
    }

    .u-section-2 .u-container-layout-3 {
      padding: 40px 30px;
    }

    .u-section-2 .u-text-5 {
      font-weight: 700;
      text-transform: uppercase;
      font-size: 1.25rem;
      margin: 0 40px 0 0;
    }

    .u-section-2 .u-text-6 {
      margin: 20px 0 0;
    }
  </style>

  
  <meta name="theme-color" content="#2e10dd">
  <meta property="og:title" content="Home 1">
  <meta property="og:description" content="">
  <meta property="og:type" content="website">
  <link rel="canonical" href="/">

</head>

<body>
  <div class="w3-container w3-teal">
    <b>
      <h1 style="font-size:300%; font-family:Arial, Helvetica, sans-serif; text-align:center; color:white ;">
        SIMULATOR SYSTEM FOR COUNTER HIJACK AND SKY MARSHALLING OPERATIONS</h1>
    </b>

  </div>
  <section class="u-clearfix u-image u-section-2" id="carousel_6697" data-image-width="2000" data-image-height="1433">

    <div class="u-expanded-width u-grey-10 u-shape u-shape-rectangle u-shape-1"></div>
    <div class="u-list u-list-1">
      <div class="u-repeater u-repeater-1">
        <div
          class="u-align-right u-bottom--radius-20 u-bottom-right-radius-20 u-container-style u-gradient u-list-item u-repeater-item u-shape-round u-list-item-1">
          <div class="u-container-layout u-similar-container u-container-layout-1">

            <p class="u-text u-text-body-alt-color u-text-2">ABOUT GUN
            </p>
          </div>
        </div>
        <div
          class="u-align-right u-bottom-right-radius-20 u-bottom-right-radius-80 u-container-style u-gradient u-list-item u-repeater-item u-shape-round u-list-item-2">
          <div class="u-container-layout u-similar-container u-container-layout-2">

            <p class="u-text u-text-body-alt-color u-text-4">About vest</p>
          </div>
        </div>
        <div
          class="u-align-left u-bottom-left-radius-20 u-bottom-right-radius-20 u-container-style u-gradient u-list-item u-repeater-item u-shape-round u-list-item-3">
          <div class="u-container-layout u-similar-container u-container-layout-3">
            <p class="u-text u-text-body-alt-color u-text-6">Mon – Fri …… 11 am – 8 pm, Sat, Sun&nbsp;&nbsp;…… 6 am – 8
              pm</p>
          </div>
        </div>
      </div>
    </div>
    <div class="left">
      <div class="container mt-3">
        <img src="//images01.nicepage.com/d161fac7320f900c5761786b/e83cc6685ec25aeb9990cb03/Picture1.png"
          class="float-end" alt="Paris" width="404" height="866">
      </div>
    </div>
  </section>
  <!-- First Photo Grid-->
  <div class="w3-row-padding w3-margin-top">
    <div class="w3-third w3-container w3-margin-bottom">
      <img src="https://images.mid-day.com/images/images/2022/feb/armykerala_d.jpg" alt="Norway" style="width:100%"
        class="w3-hover-opacity">
      <div class="w3-container w3-white">
        <p><b>Squadron Commander A</b></p>
        <p>TEAM ALPHA</p>
      </div>
    </div>
    <div class="w3-third w3-container w3-margin-bottom">
      <img src="https://images.mid-day.com/images/images/2022/feb/armykerala_d.jpg" alt="Norway" style="width:100%"
        class="w3-hover-opacity">
      <div class="w3-container w3-white">
        <p><b>Squadron Commander B</b></p>
        <p>TEAM ALPHA</p>

      </div>
    </div>
    <div class="w3-third w3-container">
      <img src="https://images.mid-day.com/images/images/2022/feb/armykerala_d.jpg" alt="Norway" style="width:100%"
        class="w3-hover-opacity">
      <div class="w3-container w3-white">
        <p><b>Squadron Commander C</b></p>
        <p>TEAM ALPHA</p>
      </div>
    </div>
  </div>
  <!-- Second Photo Grid-->
  <div class="w3-row-padding">
    <div class="w3-third w3-container w3-margin-bottom">
      <img src="https://images.mid-day.com/images/images/2022/feb/armykerala_d.jpg" alt="Norway" style="width:100%"
        class="w3-hover-opacity">
      <div class="w3-container w3-white">
        <p><b>Squadron Commander D</b></p>
        <p>TEAM BETA</p>
      </div>
    </div>
    <div class="w3-third w3-container w3-margin-bottom">
      <img src="https://images.mid-day.com/images/images/2022/feb/armykerala_d.jpg" alt="Norway" style="width:100%"
        class="w3-hover-opacity">
      <div class="w3-container w3-white">
        <p><b>Squadron Commander E</b></p>
        <p>TEAM BETA</p>
      </div>
    </div>
    <div class="w3-third w3-container">
      <img src="https://images.mid-day.com/images/images/2022/feb/armykerala_d.jpg" alt="Norway" style="width:100%"
        class="w3-hover-opacity">
      <div class="w3-container w3-white">
        <p><b>Squadron Commander F</b></p>
        <p>TEAM BETA</p>
      </div>
    </div>
  </div>
  <!-- Subscribe section -->
  <div class="w3-container w3-grey w3-padding-32">
    <h1>TRAINING RECORDS</h1>
    <table id="customers">
 <tbody>
        <tr>
          <th>SOLDIER </th>
          <th>NO.OF BULLETTS HIT BY ANOTHER TEAM </th>
          <th>NO OF BULLET MISSED</th>
          <th>NO.OF BULLETTS FIRED</th>
        </tr>
        <tr>
          <td>Squadron Commander A </td>
          <td><span class="reading"><span id="temp_celcius"></span></span></td>
          <td><span class="reading"><span id="temp_fahrenheit"> </span></span></td>
          <td><span class="reading"><span id="hum"> </span> </span></td>
        </tr>
        <tr>
          <td>Squadron Commander B </td>
          <td><span class="reading"><span id="hgum"></span> </span></td>
          <td><span class="reading"><span id="t2"></span> </span></td>
          <td><span class="reading"><span id="h2"></span> </span></td>
        </tr>
        <tr>
          <td>Squadron Commander C </td>
          <td><span class="reading"><span id="k2"> </span> </span></td>
          <td>20</td>
          <td>15</td>
        </tr>
        <tr>
          <td>Squadron Commander D </td>
          <td>12</td>
          <td>18</td>
          <td>5</td>
        </tr>


        <tr>
          <td>Squadron Commander E </td>
          <td>00</td>
          <td>00</td>
          <td>30</td>
        </tr>
        <tr>
          <td>Squadron Commander F </td>
          <td>30</td>
          <td>00</td>
          <td>00</td>

        </tr>

      </tbody>
    </table>
</body>
</html>
  <script>
  if (!!window.EventSource) {
   var source = new EventSource('/events');
  
   source.addEventListener('open', function(e) {
    console.log("Events Connected");
   }, false);
   source.addEventListener('error', function(e) {
    if (e.target.readyState != EventSource.OPEN) {
      console.log("Events Disconnected");
    }
   }, false);
  
   source.addEventListener('message', function(e) {
    console.log("message", e.data);
   }, false);
  
   source.addEventListener('temperature_Celsius', function(e) {
    console.log("temperature", e.data);
    document.getElementById("temp_celcius").innerHTML = e.data;
   }, false);
  
   source.addEventListener('temperature_Fahrenheit', function(e) {
    console.log("temperature", e.data);
    document.getElementById("temp_fahrenheit").innerHTML = e.data;
   }, false);
   source.addEventListener('humidity', function(e) {
    console.log("humidity", e.data);
    document.getElementById("hum").innerHTML = e.data;
   }, false);

   source.addEventListener('humidity', function(e) {
    console.log("humidity", e.data);
    document.getElementById("hgum").innerHTML = e.data;
   }, false);

   source.addEventListener('humidity', function(e) {
    console.log("humidity", e.data);
    document.getElementById("t2").innerHTML = e.data;
   }, false);

   source.addEventListener('humidity', function(e) {
    console.log("humidity", e.data);
    document.getElementById("h2").innerHTML = e.data;
   }, false);

   source.addEventListener('humidity', function(e) {
    console.log("humidity", e.data);
    document.getElementById("k2").innerHTML = e.data;
   }, false);
  
  }
  </script>
  </body>
  </html>)rawliteral";

void setup() {
  Serial.begin(115200);

  WiFi.begin(ssid, password);
  WiFi.mode(WIFI_STA);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Setting as a Wi-Fi Station..");
  }
  Serial.print("Station IP Address: ");
  Serial.println(WiFi.localIP());
  Serial.println();
  //Init ESP-NOW
  if (esp_now_init() != ESP_OK) {
    Serial.println("Error initializing ESP-NOW");
    return;
  }
  if (!SPIFFS.begin()) {
    Serial.println("An Error has occurred while mounting SPIFFS");
    return;
  }

  // Once ESPNow is successfully Init, we will register for recv CB to
  // get recv packer info
  esp_now_register_recv_cb(OnDataRecv);

  server.on("/", HTTP_GET, [](AsyncWebServerRequest * request) {
    request->send_P(200, "text/html", index_html);
  });
  server.on("/Picture1", HTTP_GET, [](AsyncWebServerRequest * request) {
    request->send(SPIFFS, "/Picture1.png", "image/png");
  });
  events.onConnect([](AsyncEventSourceClient * client) {
    if (client->lastId()) {
      Serial.printf("Client reconnected! Last message ID that it got is: %u\n", client->lastId());
    }
    // send event with message "hello!", id current millis
    // and set reconnect delay to 1 second
    client->send("hello!", NULL, millis(), 10000);
  });
  server.addHandler(&events);
  server.begin();
}

void loop() {
  if ((millis() - lastTime) > timerDelay) {

    getDHTReadings();
    Serial.printf("Temperature = %.2f  \n", temperature_Celsius);
    Serial.printf("Temperature = %.2f  \n", temperature_Fahrenheit);
    Serial.printf("Humidity= %f %\n", Humidity);
    Serial.println();

    // Send Events to the Web Server with the Sensor Readings
    events.send("ping", NULL, millis());
    events.send(String(temperature_Celsius).c_str(), "temperature_Celsius", millis());
    events.send(String(temperature_Fahrenheit).c_str(), "temperature_Fahrenheit", millis());
    events.send(String(Humidity).c_str(), "humidity", millis());

    lastTime = millis();
  }
}
